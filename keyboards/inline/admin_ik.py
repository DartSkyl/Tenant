from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardMarkup, InlineKeyboardBuilder


edit_tenant_data = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üè† –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å', callback_data='edit_address')],
    [InlineKeyboardButton(text='üë®‚Äçü¶∞ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è', callback_data='edit_name')],
    [InlineKeyboardButton(text='üóÉÔ∏è –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä–∞–Ω—Ç–∞', callback_data='edit_registration')]
])


def registration_application(user_id):
    reg = InlineKeyboardBuilder()
    reg.button(text='‚úíÔ∏è –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'reg_{user_id}')
    return reg.as_markup()


settings = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìÜ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É', callback_data='set_data')],
    [InlineKeyboardButton(text='‚åö –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –¥–Ω—è', callback_data='set_time')],
    [InlineKeyboardButton(text='‚è±Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª', callback_data='set_interval')]
])


def readings_come(ten_id):
    read_cm = InlineKeyboardBuilder()
    read_cm.button(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ', callback_data=f'rd_come_{ten_id}')
    return read_cm.as_markup()


def send_payment_slip(ten_id):
    send = InlineKeyboardBuilder()
    send.button(text='üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂–∫—É', callback_data=f'send_ps_{ten_id}')
    return send.as_markup()


def send_ps(ten_id):
    send = InlineKeyboardBuilder()
    send.button(text='üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂–∫—É', callback_data=f'sps_{ten_id}')
    send.button(text='‚õî –°–∫–∏–Ω—É—Ç—å –ø–ª–∞—Ç–µ–∂–∫–∏ –∑–∞–Ω–æ–≤–æ', callback_data='sps_del')
    send.adjust(1)
    return send.as_markup()


def confirm_check(ten_id):
    conf = InlineKeyboardBuilder()
    conf.button(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —á–µ–∫–∞', callback_data=f'ch_conf_{ten_id}')
    return conf.as_markup()


def viewing_tenant(ten_id):
    view_ten = InlineKeyboardBuilder()
    view_ten.button(text='üìÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é', callback_data=f'hist_{ten_id}')
    view_ten.button(text='‚ùå –£–¥–∞–ª–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä–∞–Ω—Ç–∞', callback_data=f'del_{ten_id}')
    view_ten.adjust(1)
    return view_ten.as_markup()


ten_rem_conf = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data='del_yes')],
    [InlineKeyboardButton(text='‚õî –û—Ç–º–µ–Ω–∞', callback_data='del_no')]
])


def view_history_checks(doc_key):
    view_t = InlineKeyboardBuilder()
    view_t.button(text='üßæ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–ª–∞—Ç–µ–∂–∫—É', callback_data=f'p_{doc_key}')
    view_t.button(text='üìÉ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–µ–∫ –æ–ø–ª–∞—Ç—ã', callback_data=f'ch_{doc_key}')
    view_t.adjust(1)
    return view_t.as_markup()
